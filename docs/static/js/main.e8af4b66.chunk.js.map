{"version":3,"sources":["common/icon-link.js","layout.js","svg/layout.js","svg/segment.js","svg/point.js","svg/rhombus.js","svg/index.js","math/polynom.js","eye/eye.js","eye/index.js","svg/path.js","fibonacci/index.js","pi/index.js","keyboard-control/index.js","hourglass/index.js","common/range.js","color/rgb.js","color/utils.js","router.js","serviceWorker.js","index.js"],"names":["props","name","aria-label","href","className","aria-hidden","style","borderTop","borderBottom","boxShadow","title","prefix","menus","link","Layout","header","to","map","menu","i","key","Fragment","children","display","position","width","paddingBottom","verticalAlign","overflow","version","viewBox","border","top","left","Segment","p1","p2","this","d1","x","d2","y","alpha","Math","atan2","r","sqrt","Point","join","Rhombus","c1","c2","S","x3","cos","y3","sin","x4","y4","points","x1","y1","x2","y2","fill","stroke","strokeWidth","Circle","coords","cx","cy","Rect","w","h","height","Square","Line","Triangle","p3","p","Trapeze","MovingDashLines","y0","l","idx","n","parseInt","moveIdx","middle","Array","_","polyY","m","q","getSquareCenter","Eye","scoords","equationFromSegment","s3","s4","polyX","useState","setX","setY","type","min","max","onChange","e","func","v","Number","target","value","toStr","s","Path","start","end","curvatureRatio","displayCircles","curvature","abs","senseX1","getSenseX1","senseX2","getSenseX2","senseY1","getSenseY1","senseY2","getSenseY2","circles","d","PathWSquare","displaySquares","square","goldenRatio","getDirection","offset","FiboPaths","nIter","dx1","dy1","dx2","dy2","init","f1","f2","j","t","concat","computeDirections","setCurvatureRatio","setDisplaySquares","setDisplayCircles","setNIter","setW","animationOn","setAnimationOn","useEffect","document","setTimeout","toFixed","checked","wMin","wMax","onClick","isInCircle","circleC","pow","squareC","nPeas","setNpeas","peas","random","piApprox","filter","length","PI","React","setHeight","lr","setLr","setMoveIdx","dx","setDx","steer","keyCode","keyCodeSet","setValue","kInc","kDec","onKeyDown","a","x2FromY","hTrapeze","red","setRed","green","setGreen","blue","setBlue","color","b","c","toUnitHex","String","toHex","NotFound","Public","transform","withRouter","path","component","Fibonacci","Pi","KeyboardControl","Hourglass","Color","Boolean","window","location","hostname","match","history","History","basename","process","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8af4b66.chunk.js","sourcesContent":["import React from 'react';\n\nexport default props => {\n  const { name } = props;\n  return <a aria-label={name} href=\"https://github.com/johnb8005/svg\">\n    <i className={`fa fa-${name}`} aria-hidden=\"true\"/>\n  </a>;\n};\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport IconLink from './common/icon-link';\n\nconst style = {\n  borderTop: '1px solid #e5e5e5',\n  borderBottom: '1px solid #e5e5e5',\n  boxShadow: '0 .25rem .75rem rgba(0, 0, 0, .05)'\n}\n\nconst title = 'SVG Fun';\n\nconst prefix = '';// process.env.PUBLIC_URL || '';\n\nconst menus = [ \n  {name: 'Eye', link: '/eye'},\n  {name: 'Fibonacci', link: '/fibonacci'},\n  {name: 'Pi', link: '/pi'},\n  {name: 'Keyboard Control', link:'/keyboard-control'},\n  {name: 'Hourglass', link:'/hourglass'},\n  {name: 'Color', link: '/color'}\n];\n\nfunction Layout(props) {\n  const header = (<header>\n    <div style={style} className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3\">\n      <h5 className=\"my-0 mr-md-auto font-weight-normal\"><Link to={prefix + '/'}>{title}</Link></h5>\n      <nav className=\"my-2 my-md-0 mr-md-3\">\n        {menus.map((menu,i) => <Link className=\"p-2 text-dark\" key={i} to={menu.link}>{menu.name}</Link>)}\n        <IconLink name=\"code\"/>\n      </nav>\n    </div>\n  </header>);\n\n  return (<React.Fragment>{header}<div className=\"container\">{props.children}</div></React.Fragment>);\n}\nexport default Layout;","import React from 'react';\n\nexport default props => {\n  const { children } = props;\n\n  //const onMouseMove = e => {\n    //const x = e.screenX - 7;\n    //const y = e.screenY - 86;\n\n    //const c = { x, y };\n    //console.log(c)\n  //}\n  //\n  //  {/*preserveAspectRatio=\"xMinYMin meet\"\n  //   onMouseMove={onMouseMove}*/}\n\n  return <div style={{\n    display: 'inline-block',\n    position: 'relative',\n    width: '100%',\n    paddingBottom: '100%',\n    verticalAlign: 'middle',\n    overflow: 'hidden'\n  }}>\n    <svg\n      version=\"1.1\"\n      viewBox=\"0 0 800 800\" \n      style={{\n        border: '1px solid black',\n        display: 'inline-block',\n        position: 'absolute',\n        top: 0,\n        left: 0\n      }}\n    >{children}</svg>\n  </div>;\n}\n","class Segment {\n  constructor(p1, p2) {\n    this.p1 = p1;\n    this.p2 = p2;\n\n    this.d1 = p1.x - p1.x;\n    this.d2 = p2.y - p2.y;\n\n    this.alpha = Math.atan2(this.d1, this.d2);\n    this.r = Math.sqrt(this.d1**2 + this.d2**2);\n  }\n}\n\nexport default Segment;","export default class Point {\n  constructor (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  toLin() {\n    return [this.x, this.y].join(',');\n  }\n}\n\n","import React from 'react';\n\nimport Segment from './segment';\n\nconst Rhombus = props => {\n  const { c1, c2 } = props;\n\n  const S = new Segment(c1, c2)\n\n  const x3 = S.p1.x - S.r*Math.cos(S.alpha);\n  const y3 = S.p1.y + S.r*Math.sin(S.alpha);\n  const x4 = S.p2.x - S.r*Math.cos(S.alpha);\n  const y4 = S.p2.y + S.r*Math.sin(S.alpha);\n\n  const points = [\n    [S.x1, S.y1].join(','),\n    [S.x2, S.y2].join(','),\n    [x4, y4].join(','),\n    [x3, y3].join(','),\n  ].join(' ');\n\n  return <polygon points={points} style={{fill:'none', stroke:'purple', strokeWidth:1}} />\n}\n\nexport default Rhombus;","import React from 'react';\n\nimport Layout from './layout';\nimport Segment from './segment';\nimport Point from './point';\nimport Rhombus from './rhombus';\n\nexport const Circle = props => {\n  const { r = 10, coords: {x, y} = {x: 0, y: 0}, stroke='green' } = props;\n\n  return <circle r={r} cx={x} cy={y} stroke={stroke} strokeWidth=\"1\" fill=\"none\"/>\n}\n\nexport const Rect = props => {\n  const { w, h, coords: {x, y} = {x: 0, y: 0}} = props;\n  return <rect width={w} height={h} x={x} y={y} style={{fill: 'none', strokeWidth:1, stroke: 'rgb(0,0,0)'}} />\n}\n\nexport const Square = props => {\n  const { w, coords} = props;\n\n  return <Rect w={w} h={w} coords={coords}/>\n}\n\nexport const Line = props => {\n  const { p1, p2, stroke= 'orange' } = props;\n  return <line x1={p1.x} y1={p1.y} x2={p2.x}  y2={p2.y} stroke={stroke} strokeWidth=\"1\"/>;\n}\n\nexport const Triangle = props => {\n  const { p1, p2, p3, stroke='grey', fill = 'none' } = props;\n\n  const points = [p1, p2, p3].map(p => `${p.x},${p.y}`).join(' ')\n\n\n  return <polygon points={points} style={{fill, stroke, strokeWidth:1}} />\n}\n\nexport const Trapeze = props => {\n  const { p1, p2, p3, stroke='grey', fill = 'none' } = props;\n\n  const p4 = {x: (p3.x + (p2.x-p1.x)), y: p1.y}; \n\n  const points = [p1, p2, p3, p4].map(p => `${p.x},${p.y}`).join(' ')\n\n\n  return <polygon points={points} style={{fill, stroke, strokeWidth:1}} />\n}\n\n/**\n * gives the impression of a road moving underneath you\n */\nexport const MovingDashLines = props => {\n  const { y0, y1, l = 8, x = 100, idx = 0, stroke = 'purple' } = props;\n\n  const n = parseInt((y1-y0)/(2*l))+1\n\n  const moveIdx = idx % (l*2)\n\n  const middle = (new Array(n-1)).fill(0).map((_, i) => {\n    return <Line key={i} p1={{x, y: y0+(2*i+1)*l + moveIdx}} p2={{x, y: y0+(2*i)*l + moveIdx}} stroke={stroke}/>\n  })\n\n  return <>\n    <Line p1={{x, y: y0+(moveIdx>l ? moveIdx-l: 0)}} p2={{x, y: y0}} stroke={stroke}/>\n    {middle}\n    <Line p1={{x, y: y0+(n*2-1)*l }} p2={{x, y: y0+(n*2-2)*l + (moveIdx > l ? l : moveIdx)}} stroke={stroke}/>\n  </>\n}\n\nexport { Layout, Segment, Point, Rhombus };","export const equationFromSegment = (p1, p2) => {\n  const m = (p2.y - p1.y)/(p2.x - p1.x);\n  const q = p1.y - m * p1.x;\n\n  return { m, q };\n}\n\nexport const polyY = (x, {m, q}) => m*x + q;\nexport const polyX = (y, {m, q}) => (y - q ) / m;\n\n\nexport const solve2nd = (a, b, c) => {\n  const d = b**2 - 4*a*c;\n\n  const x1 = (-b + Math.sqrt(d))/(2*a);\n  const x2 = (-b - Math.sqrt(d))/(2*a);\n\n  return [x1, x2];\n}","import React from 'react';\n\nimport { Circle, Square } from '../svg';\n\nconst getSquareCenter = (w, coords) => {\n  const x = coords.x + w/2;\n  const y = coords.y + w/2;\n  return {x, y};\n}\n\nconst Eye = (props) => {\n  const { w, coords } = props;\n  const scoords = getSquareCenter(w, coords);\n\n  return <React.Fragment>\n    <Circle r={Math.sqrt(2)*w/2} coords={scoords}/>\n    <Circle r={w/2} coords={scoords}/>\n    <Circle r={Math.sqrt(2)*w} coords={coords}/>\n    <Circle r={Math.sqrt(2)*w} coords={getSquareCenter(w, scoords)}/>\n    <Square w={w} coords={coords}/>\n  </React.Fragment>\n}\n\nexport default Eye;","import React, { useState } from 'react';\n\nimport { Layout, Point, Line, Rhombus } from '../svg';\nimport { equationFromSegment, polyY, polyX } from '../math/polynom';\n\nimport Eye from './eye'\n\nexport default props => {\n  const r = 25;\n\n  const coords = {x: 400, y: 100};\n  const w = 53;\n  \n  const s1 = {x: coords.x + w, y: coords.y};\n  const s2 = {x: coords.x, y: coords.y + w};\n\n  const { m, q } = equationFromSegment(s1, s2);\n\n  const s3 = {x: 0}\n  s3.y = polyY(s3.x, { m, q });\n  const s4 = {y: 0}\n  s4.x = polyX(s4.y, { m, q });\n\n  const x0 = 244;\n  const [ x, setX ] = useState(x0);\n  const [ y, setY ] = useState(polyY(x0, { m, q })-w);\n\n  const onChange = (e, func) => {\n    const v = Number(e.target.value);\n    setX(v);\n    const y = polyY(v, {m, q});\n    setY(y - w);\n  }\n\n  return <React.Fragment>\n    <input style={{width: `${s4.x - s3.x}px`}} type=\"range\" min={s3.x} max={s4.x} onChange={(e) => onChange(e, setX)} value={x}/>\n    <code>({x}, {y})</code>\n    {/*<input type=\"range\" min={0} max={200} onChange={(e) => onChange(e, setY)} value={y} style={{marginTop: '50px', transform: 'rotate(270deg)'}}/>*/}\n    <Layout>\n      <Eye r={r} w={w} coords={coords}/>\n      <Eye r={r} w={w} coords={{x, y}}/>\n      {/*<Circle r={200} coords={{x: 319, y: 233}}/>*/}\n      <Line p1={s4} p2={s3}/>\n      <Rhombus c1={new Point(50,70)} c2={new Point(100,90)}/>\n    </Layout>\n  </React.Fragment>\n}\n","import React from 'react';\nimport { Square, Circle } from './index';\n//import { toStr, getSenseX1, getSenseX2, getSenseY1, getSenseY2, goldenRatio } from './utils';\n\nexport const toStr = s => s.x + ' ' + s.y;\n\nexport const getSenseX1 = (start, end) => {\n  // #2\n  if (start.x > end.x && start.y < end.y) {\n    return -1\n  }\n\n  // #4\n  if (start.x < end.x && start.y > end.y) {\n    return 1\n  }\n\n  return 0;\n}\n\nexport const getSenseY2 = (start, end) => {\n  // #2\n  if (start.x > end.x && start.y < end.y) {\n    return -1\n  }\n\n  // #4\n  if (start.x < end.x && start.y > end.y) {\n    return 1\n  }\n\n  return 0;\n}\n\nexport const getSenseX2 = (start, end) => {\n  // #1\n  if (start.x < end.x && start.y < end.y) {\n    return 1\n  }\n\n  // # 3\n  if (start.x > end.x && start.y > end.y) {\n    return -1\n  }\n\n  return 0;\n}\n\nexport const getSenseY1 = (start, end) => {\n  // #1\n  if (start.x < end.x && start.y < end.y) {\n    return -1\n  }\n\n  // # 3\n  if (start.x > end.x && start.y > end.y) {\n    return 1\n  }\n\n  return 0;\n}\n\nconst Path = props => {\n  const { start, end, curvatureRatio = .5, displayCircles = true } = props;\n\n  const r = Math.abs(start.x - end.x);\n  const curvature = r*curvatureRatio;\n\n  const senseX1 = getSenseX1(start, end);\n  const senseX2 = getSenseX2(start, end);\n  const senseY1 = getSenseY1(start, end);\n  const senseY2 = getSenseY2(start, end);\n\n  const c1 = {x: start.x + senseX1*curvature, y: start.y + senseX2*curvature};\n  const c2 = {x: end.x + senseY1*curvature , y: end.y + senseY2*curvature};\n\n  const circles = displayCircles ? <React.Fragment>\n    <Circle r={3} coords={start} stroke=\"blue\"/>\n    <Circle r={3} coords={end} stroke=\"red\"/>\n    <Circle r={3} coords={c1}/>\n    <Circle r={3} coords={c2}/>\n  </React.Fragment> : null;\n\n  return <React.Fragment>\n    {circles}\n    <path d={`M ${toStr(start)} C ${toStr(c1)}, ${toStr(c2)}, ${toStr(end)}`} stroke=\"black\" fill=\"transparent\"/>\n  </React.Fragment>;\n}\n\nexport default Path;\n\nexport const PathWSquare = props => {\n  const { start, end, curvatureRatio = .5, displaySquares = true, displayCircles = true } = props;\n\n  const w = Math.abs(start.x - end.x);\n\n  const coords = {x: Math.min(start.x, end.x), y: Math.min(start.y, end.y)};\n\n  const square = displaySquares ? <Square w={w} coords={coords}/> : null;\n\n  return <React.Fragment>\n    {square}\n    <Path start={start} end={end} curvatureRatio={curvatureRatio} displayCircles={displayCircles}/>\n  </React.Fragment>\n}","import React, { useState, useEffect } from 'react';\n\nimport { Layout } from '../svg';\nimport { PathWSquare } from '../svg/path';\n\nconst goldenRatio = (1 + Math.sqrt(5))/2;\n\nconst getDirection = (i, offset = 0) => {\n  if(i % 4 === offset % 4 || i % 4 === (offset + 1) % 4){\n    return 1;\n  }\n\n  return -1;\n}\n\nconst computeDirections = (nIter) => {\n  // init deltas\n  let dx1  = 0;\n  let dy1 = 0;\n  let dx2 = 1;\n  let dy2 = 1;\n\n  const init = {dx1, dy1, dx2, dy2}\n\n  // init fibonacci\n  let f1 = 0;\n  let f2 = 0;\n  const r = Array(nIter).fill(0).map((_, j) => {\n    // get the right offset\n    const i = j + 1;\n    // compute next fibonacci number\n    const t = f2 === 0 ? 1 : f1 + f2;\n    \n    // get the different directions \n    dx1  += t*getDirection(i, 1);\n    dy1 += t*getDirection(i);\n    dx2 += (t+f2)*getDirection(i);\n    dy2 += (t+f2)*getDirection(i, 3);\n\n    f1 = f2\n    f2 = t;\n\n    return {dx1, dy1, dx2, dy2};\n  });\n\n  return [init].concat(r);\n}\n\nconst FiboPaths = props => {\n  const { nIter, w, displayCircles, displaySquares, curvatureRatio } = props;\n  return <Layout>\n    {computeDirections(nIter).map((_, j) => <PathWSquare key={j} start={{x: 400 + _.dx1*w, y: 300 + _.dy1*w}} end={{x:400 + _.dx2*w, y: 300 + _.dy2*w}} displaySquares={displaySquares} displayCircles={displayCircles} curvatureRatio={curvatureRatio}/>)}\n  </Layout>\n}\n\nexport default props => {\n  const [ curvatureRatio, setCurvatureRatio ] = useState(goldenRatio - 1);\n  const [ displaySquares, setDisplaySquares ] = useState(true);\n  const [ displayCircles, setDisplayCircles ] = useState(true);\n  const [ nIter, setNIter ] = useState(21);\n  const [ w, setW ] = useState(.4);\n  const [ animationOn, setAnimationOn ] = useState(false);\n  const wMax = 10;\n  const wMin = .01;\n\n  // https://stackoverflow.com/questions/46160461/how-do-you-set-the-document-title-in-react\n  useEffect(() => {\n   document.title = 'Fibonacci';\n  }, []);\n\n  const keepAnimationRunning = () => {\n    const wInc = .1;\n    const dt = 100;\n\n    if (animationOn === true) {\n      if (wMax > w) {\n        setTimeout(() => {\n          setW(w + wInc);\n        }, dt);\n      } else {\n        setAnimationOn(false);\n      }\n    }\n  }\n\n  keepAnimationRunning()\n\n  return <React.Fragment>\n    <ul>\n      <li>Curvature ratio: <input type=\"range\" min={0} max={100} onChange={e => setCurvatureRatio(Number(e.target.value)/100)}/> <code>{curvatureRatio.toFixed(2)}</code></li>\n      <li>Display square: <input type=\"checkbox\" checked={displaySquares} onChange={() => setDisplaySquares(!displaySquares)}/></li>\n      <li>Display circles: <input type=\"checkbox\" checked={displayCircles} onChange={() => setDisplayCircles(!displayCircles)}/></li>\n      <li># iterations: <input type=\"number\" value={nIter} onChange={(e) => setNIter(Number(e.target.value))}/></li>\n      <li>w: <input type=\"range\" min={ wMin * 100 } max={wMax * 100} value={w*100} onChange={(e) => setW(Number(e.target.value/100))}/></li> \n      <li><button onClick={() => {setW(wMin);setAnimationOn(true)}}>Launch Animation</button></li>\n    </ul>\n\n    <FiboPaths nIter={nIter} displaySquares={displaySquares} displayCircles={displayCircles} curvatureRatio={curvatureRatio} w={w}/>\n  </React.Fragment>;\n} \n","import React, { useState } from 'react';\n\nimport { Layout, Circle, Square } from '../svg';\n\n/**\n * checks whether point is in circle or not\n * @param  {[type]} p       point coords\n * @param  {[type]} circleC circleCenter\n * @param  {[type]} r       radius\n * @return boolean\n */\nconst isInCircle = (p, circleC, r) => Math.pow(p.x - circleC.x, 2) + Math.pow(p.y - circleC.y, 2) < Math.pow(r, 2);\n\nexport default props => {\n  const r = 200;\n  const offset = 30;\n  const circleC = {x: offset+r, y: offset+r}\n  const squareC = {x: offset, y: offset};\n\n  const [ nPeas, setNpeas ] = useState(50);\n\n  const peas = Array(nPeas).fill(0).map(_ => {\n    const x = Math.random()*r*2 + offset;\n    const y = Math.random()*r*2 + offset;\n\n    return {x, y};\n  });\n\n  const l = peas\n    .map(p => isInCircle(p, circleC, r))\n    .filter(_ => _ === true).length;\n\n  const piApprox = 4*l/nPeas;\n\n  return <React.Fragment>\n    <h2>Monte Carlo Simulation of PI</h2>\n    <p>See <a href=\"https://en.wikipedia.org/wiki/Monte_Carlo_method#Overview\">Monte Carlo method on wikipedia</a>.</p>\n    <ul>\n      <li># of peas: <input type=\"range\" min=\"10\" max=\"5000\" value={nPeas} onChange={(e) => setNpeas(Number(e.target.value))}/><code>{nPeas}</code></li>\n      {/*<li><button onClick={() => {setNpeas(1);setNpeas(nPeas)}}>Draw again</button></li>*/}\n      <li>Pi appromximation: <code>{piApprox}</code> vs <code>{Math.PI}</code></li>\n      <li>Pi precision: <code>{(100*(piApprox-Math.PI)/Math.PI).toFixed(2)}%</code></li>\n    </ul>\n    <Layout>\n    <Circle r={r} coords={circleC}/>\n    <Square w={r*2} coords={squareC}/>\n    {peas.map((p, i) => <Circle stroke={isInCircle(p, circleC, r) ? 'red': 'blue'} key={i} r={.1} coords={p}/>)}\n\n    </Layout>\n  </React.Fragment>;\n} \n","import React from 'react';\n\nimport Layout from '../svg/layout';\nimport { Circle, Line, MovingDashLines } from '../svg';\n\nexport default () => {\n  const [ height, setHeight ] = React.useState(0);\n  const [ lr, setLr ] = React.useState(0);\n  const [ moveIdx, setMoveIdx ] = React.useState(0);\n  const [ dx, setDx]  = React.useState(1);\n\n  const steer = (keyCode, keyCodeSet, max, value, setValue) => {\n    const [kInc, kDec] = keyCodeSet;\n    if (keyCode === kInc && value < max) {\n      setValue(value + 1);\n    }\n\n    if (keyCode === kDec && value > -max) {\n      setValue(value - 1);\n    }\n  }\n\n  const onKeyDown = a => {\n    steer(a.keyCode,  [38, 40], 30, height, setHeight);\n    steer(a.keyCode,  [37, 39], 30, lr, setLr);\n    const d = 1+Math.abs(height)\n\n    setDx(d)\n  }\n  \n  setTimeout(() => {\n    setMoveIdx((moveIdx + dx))\n  },50);\n\n  return <>\n    <textarea onKeyDown={onKeyDown}/>\n      <Layout>\n        <Circle coords={{x: 100, y: 100}} r={50}/>\n        <Line p1={{x: 70, y: 100 + height}} p2={{x: 130, y: 100 + height}}/>\n        <Line p1={{x: 100 +lr, y: 70}} p2={{x: 100 + lr, y: 130}}/>\n        <Line p1={{x: 90, y: 100}} p2={{x: 110, y: 100}} stroke={'grey'}/>\n        <Line p1={{x: 100, y: 90}} p2={{x: 100, y: 110}} stroke={'grey'}/>\n\n\n        <Line p1={{x: 200, y: 150}} p2={{x: 210, y: 50}} stroke={'grey'}/>\n        <Line p1={{x: 260, y: 150}} p2={{x: 250, y: 50}} stroke={'grey'}/>\n\n\n        <MovingDashLines y0={50} y1={145} l={20}  x ={230} idx={moveIdx} stroke={'grey'}/>\n      </Layout>\n  </>;\n}","import React from 'react';\n\nimport Layout from '../svg/layout';\nimport { Trapeze, Triangle, MovingDashLines } from '../svg';\n\nexport default () => {\n  const h0=53;\n  const hMax = 125;\n  const [ h, setHeight ] = React.useState(h0);\n\n  const x1FromY = y => {\n    const m = (125-50)/(100-50);\n    const q = 125 - m * 100;\n\n    return (y - q)/m;\n  }\n\n  const x2FromY = y => {\n    const m = (125-50)/(100-150);\n    const q = 125 - m * 100;\n\n    return (y - q)/m;\n  }\n\n  if(h<hMax) {\n    setTimeout(() => {\n      setHeight(h+1);\n    }, 100);\n  } else {\n    setHeight(h0)\n  }\n\n  const hTrapeze = 250-h;\n\n  const fill = 'grey'// '#de' + toHex(h*3) + '7';\n\n\n  return <>\n  <input type=\"range\" value={h} min={h0} max={hMax} onChange={e => {\n    const x = Number(e.target.value);\n\n    setHeight(x);\n\n  }}/>\n      <Layout>\n        <Triangle p1={{x: 50, y: 50}} p2={{x: 150, y: 50}}  p3={{x: 100, y: 125}} />\n        <Triangle p1={{x: 50, y: 200}} p2={{x: 150, y: 200}}  p3={{x: 100, y: 125}} />\n        <Triangle p1={{x: x1FromY(h), y: h}} p2={{x: x2FromY(h), y: h}}  p3={{x: 100, y: 125}} fill={fill}/>\n        <Trapeze p1={{x: x2FromY(hTrapeze), y: hTrapeze}} p2={{x: 50, y: 200}} p3={{x: 150, y: 200}} fill={fill}/>\n        <MovingDashLines idx={h+3} y0={125} y1={200} stroke={fill}/>\n      </Layout>\n  </>;\n}\n\n\n","import React from 'react';\n\nexport default props => {\n  const { min, max, value, onChange } = props;\n\n  return <input type=\"range\" value={value} min={min} max={max} onChange={e => {\n    const x = Number(e.target.value);\n    onChange(x);\n  }}/>\n}","import React from 'react';\n\nimport Layout from '../svg/layout';\nimport { Trapeze } from '../svg';\n\nimport { toColor, toHex } from './utils'\nimport Range from '../common/range';\n\nexport default () => {\n  const color0=0;\n  const colorMax = (4 << 2 << 4) - 1;\n\n  const [ red, setRed ] = React.useState(color0);\n  const [ green, setGreen ] = React.useState(color0);\n  const [ blue, setBlue ] = React.useState(color0);\n\n  const color = toColor(red, green, blue);\n\n  const fill = `rgb(${red}, ${green}, ${blue})`;\n\n  return <>\n    <code>HEX: #{toHex(color)} Number: {color}</code><br/>\n\n    R: <Range value={red} min={color0} max={colorMax} onChange={setRed}/> {red}<br/>\n    G: <Range value={green} min={color0} max={colorMax} onChange={setGreen}/> {green} <br/>\n    B: <Range value={blue} min={color0} max={colorMax} onChange={setBlue}/>{blue} <br/>\n    \n    <Layout>\n      <Trapeze p1={{x: 100, y: 50}} p2={{x: 50, y: 200}} p3={{x: 150, y: 200}} fill={fill}/>\n    </Layout>\n  </>;\n}\n","export const toColor = (r, g, b) => {\n\n  const hg = g << 8;\n  const hb = b << 16;\n\n  return hg + hb + r;\n}\n\n// todo move to utils and optimize\nexport const toHex = i => {\n  const a = i%16;\n  const b = (i >> 4)%16;\n  const c = (i >> 8)%16;\n  const d = (i >> 12)%16;\n  const e = (i >> 16)%16;\n  const f = (i >> 20)%16;\n\n  const toUnitHex = i => {\n    if (i < 10) {\n      return String(i);\n    }\n\n    const arr = ['a', 'b', 'c', 'd', 'e', 'f'];\n    return arr[i-10];\n  }\n\n  return  toUnitHex(f) + toUnitHex(e) + toUnitHex(d) + toUnitHex(c) + toUnitHex(b) + toUnitHex(a);\n}\n\nexport const toHexFromNumber = i => {\n  const a = i%16;\n  const b = (i >> 4)%16;\n  const c = (i >> 8)%16;\n\n  const toUnitHex = i => {\n    if (i < 10) {\n      return String(i);\n    }\n\n    const arr = ['a', 'b', 'c', 'd', 'e', 'f'];\n    return arr[i-10];\n  }\n\n  return  toUnitHex(c) + toUnitHex(b) + toUnitHex(a);\n}","import React from 'react';\nimport {\n  Switch,\n  Route,\n  withRouter\n} from 'react-router-dom';\n\nimport Layout from './layout';\nimport Eye from './eye';\nimport Fibonacci from './fibonacci';\nimport Pi from './pi';\nimport KeyboardControl from 'keyboard-control';\nimport Hourglass from './hourglass';\nimport Color from './color/rgb';\n\nconst NotFound = () => <p>Page Not Found</p>;\nconst Public = () => (\n  <p>Browse to the different pages via the menu <i className=\"fa fa-arrow-right\" style={{\n    transform: 'rotate(-45deg)'}}></i></p>\n);\n\nfunction Router(props) {\n  return (<Layout>\n    <Switch>\n      <Route path=\"/eye\" component={Eye} props={props} />\n      <Route path=\"/fibonacci\" component={Fibonacci} props={props} />\n      <Route path=\"/pi\" component={Pi} props={props} />\n      <Route path=\"/keyboard-control\" component={KeyboardControl} props={props} />\n      <Route path=\"/hourglass\" component={Hourglass} props={props} />\n      <Route path=\"/color\" component={Color} props={props} />\n      <Route path=\"/\" component={Public} props={props} />\n      <Route path=\"/\" component={NotFound} />\n    </Switch>\n  </Layout>);\n}\n\nexport default withRouter(Router);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport * as History from 'history';\n\nimport AppRouter from './router';\nimport * as serviceWorker from './serviceWorker';\n\nconst history = History.createBrowserHistory({\n  basename: process.env.PUBLIC_URL || '',\n});\n\nReactDOM.render(\n  <Router history={history}>\n    <AppRouter />\n  </Router>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}