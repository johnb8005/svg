{"version":3,"sources":["svg/layout.js","svg/segment.js","svg/point.js","svg/rhombus.js","svg/index.js","math/polynom.js","eye/eye.js","eye/index.js","svg/path.js","fibonacci/index.js","router.js","serviceWorker.js","index.js"],"names":["props","children","style","border","onMouseMove","e","width","height","Segment","p1","p2","this","d1","x","d2","y","alpha","Math","atan2","r","sqrt","Point","join","Rhombus","c1","c2","S","x3","cos","y3","sin","x4","y4","points","x1","y1","x2","y2","fill","stroke","strokeWidth","Circle","coords","cx","cy","Rect","w","h","Square","Line","polyY","m","q","getSquareCenter","Eye","scoords","Fragment","equationFromSegment","s3","s4","polyX","useState","setX","setY","type","min","max","onChange","func","v","Number","target","value","toStr","s","Path","start","end","curvatureRatio","displayCircles","curvature","abs","senseX1","getSenseX1","senseX2","getSenseX2","senseY1","getSenseY1","senseY2","getSenseY2","circles","d","PathWSquare","displaySquares","square","goldenRatio","getDirection","i","offset","FiboPaths","nIter","dx1","dy1","dx2","dy2","init","f1","f2","Array","map","_","j","t","concat","computeDirections","key","setCurvatureRatio","setDisplaySquares","setDisplayCircles","setNIter","setW","animationOn","setAnimationOn","useEffect","document","title","setTimeout","checked","wMin","wMax","onClick","NotFound","Public","to","withRouter","path","component","Fibonacci","Boolean","window","location","hostname","match","history","History","basename","process","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2NAEe,WAAAA,GAAU,IACfC,EAAaD,EAAbC,SAUR,OAAO,yBAAKC,MAAO,CAACC,OAAQ,mBAAoBC,YAR5B,SAAAC,KAQsDC,MAAM,OAAOC,OAAO,SAASN,I,OCA1FO,EAZb,WAAYC,EAAIC,GAAK,oBACnBC,KAAKF,GAAKA,EACVE,KAAKD,GAAKA,EAEVC,KAAKC,GAAKH,EAAGI,EAAIJ,EAAGI,EACpBF,KAAKG,GAAKJ,EAAGK,EAAIL,EAAGK,EAEpBJ,KAAKK,MAAQC,KAAKC,MAAMP,KAAKC,GAAID,KAAKG,IACtCH,KAAKQ,EAAIF,KAAKG,KAAK,SAAAT,KAAKC,GAAI,GAAT,SAAaD,KAAKG,GAAI,K,QCTxBO,E,WACnB,WAAaR,EAAGE,GAAI,oBAClBJ,KAAKE,EAAIA,EACTF,KAAKI,EAAIA,E,oDAIT,MAAO,CAACJ,KAAKE,EAAGF,KAAKI,GAAGO,KAAK,S,KCiBlBC,EApBC,SAAAvB,GAAU,IAChBwB,EAAWxB,EAAXwB,GAAIC,EAAOzB,EAAPyB,GAENC,EAAI,IAAIlB,EAAQgB,EAAIC,GAEpBE,EAAKD,EAAEjB,GAAGI,EAAIa,EAAEP,EAAEF,KAAKW,IAAIF,EAAEV,OAC7Ba,EAAKH,EAAEjB,GAAGM,EAAIW,EAAEP,EAAEF,KAAKa,IAAIJ,EAAEV,OAC7Be,EAAKL,EAAEhB,GAAGG,EAAIa,EAAEP,EAAEF,KAAKW,IAAIF,EAAEV,OAC7BgB,EAAKN,EAAEhB,GAAGK,EAAIW,EAAEP,EAAEF,KAAKa,IAAIJ,EAAEV,OAE7BiB,EAAS,CACb,CAACP,EAAEQ,GAAIR,EAAES,IAAIb,KAAK,KAClB,CAACI,EAAEU,GAAIV,EAAEW,IAAIf,KAAK,KAClB,CAACS,EAAIC,GAAIV,KAAK,KACd,CAACK,EAAIE,GAAIP,KAAK,MACdA,KAAK,KAEP,OAAO,6BAASW,OAAQA,EAAQ/B,MAAO,CAACoC,KAAK,OAAQC,OAAO,SAAUC,YAAY,MCdvEC,EAAS,SAAAzC,GAAU,IAAD,EACqCA,EAA1DmB,SADqB,MACjB,GADiB,IACqCnB,EAAlD0C,OAAS7B,GADI,aACI,CAACA,EAAG,EAAGE,EAAG,GADd,GACJF,EAAGE,EADC,EACDA,EADC,EACqCf,EAAnBuC,cADlB,MACyB,QADzB,EAG7B,OAAO,4BAAQpB,EAAGA,EAAGwB,GAAI9B,EAAG+B,GAAI7B,EAAGwB,OAAQA,EAAQC,YAAY,IAAIF,KAAK,UAG7DO,EAAO,SAAA7C,GAAU,IACpB8C,EAAuC9C,EAAvC8C,EAAGC,EAAoC/C,EAApC+C,EADgB,EACoB/C,EAAjC0C,OAAS7B,GADI,aACI,CAACA,EAAG,EAAGE,EAAG,GADd,GACJF,EAAGE,EADC,EACDA,EAC1B,OAAO,0BAAMT,MAAOwC,EAAGvC,OAAQwC,EAAGlC,EAAGA,EAAGE,EAAGA,EAAGb,MAAO,CAACoC,KAAM,OAAQE,YAAY,EAAGD,OAAQ,iBAGhFS,EAAS,SAAAhD,GAAU,IACtB8C,EAAa9C,EAAb8C,EAAGJ,EAAU1C,EAAV0C,OAEX,OAAO,kBAAC,EAAD,CAAMI,EAAGA,EAAGC,EAAGD,EAAGJ,OAAQA,KAGtBO,EAAO,SAAAjD,GAAU,IACpBS,EAAWT,EAAXS,GAAIC,EAAOV,EAAPU,GACZ,OAAO,0BAAMwB,GAAIzB,EAAGI,EAAGsB,GAAI1B,EAAGM,EAAGqB,GAAI1B,EAAGG,EAAIwB,GAAI3B,EAAGK,EAAGwB,OAAO,SAASC,YAAY,OCnBvEU,EAAQ,SAACrC,EAAD,YAAKsC,EAAYtC,EAAjB,EAAQuC,GCHvBC,EAAkB,SAACP,EAAGJ,GAG1B,MAAO,CAAC7B,EAFE6B,EAAO7B,EAAIiC,EAAE,EAEZ/B,EADD2B,EAAO3B,EAAI+B,EAAE,IAiBVQ,EAbH,SAACtD,GAAW,IACd8C,EAAc9C,EAAd8C,EAAGJ,EAAW1C,EAAX0C,OACLa,EAAUF,EAAgBP,EAAGJ,GAEnC,OAAO,kBAAC,IAAMc,SAAP,KACL,kBAAC,EAAD,CAAQrC,EAAGF,KAAKG,KAAK,GAAG0B,EAAE,EAAGJ,OAAQa,IACrC,kBAAC,EAAD,CAAQpC,EAAG2B,EAAE,EAAGJ,OAAQa,IACxB,kBAAC,EAAD,CAAQpC,EAAGF,KAAKG,KAAK,GAAG0B,EAAGJ,OAAQA,IACnC,kBAAC,EAAD,CAAQvB,EAAGF,KAAKG,KAAK,GAAG0B,EAAGJ,OAAQW,EAAgBP,EAAGS,KACtD,kBAAC,EAAD,CAAQT,EAAGA,EAAGJ,OAAQA,MCZX,WAAA1C,GACb,IAEM0C,EAAS,CAAC7B,EAAG,IAAKE,EAAG,KACrB+B,EAAI,GAJY,EFPW,SAACrC,EAAIC,GACtC,IAAMyC,GAAKzC,EAAGK,EAAIN,EAAGM,IAAIL,EAAGG,EAAIJ,EAAGI,GAGnC,MAAO,CAAEsC,IAAGC,EAFF3C,EAAGM,EAAIoC,EAAI1C,EAAGI,GEcP4C,CAHN,CAAC5C,EAAG6B,EAAO7B,EAAIiC,EAAG/B,EAAG2B,EAAO3B,GAC5B,CAACF,EAAG6B,EAAO7B,EAAGE,EAAG2B,EAAO3B,EAAI+B,IAE/BK,EATc,EASdA,EAAGC,EATW,EASXA,EAELM,EAAK,CAAC7C,EAAG,GACf6C,EAAG3C,EAAImC,EAAMQ,EAAG7C,EAAG,CAAEsC,IAAGC,MACxB,IAAMO,EAAK,CAAC5C,EAAG,GACf4C,EAAG9C,EFbgB,SAACE,EAAD,OAAKoC,EAAL,EAAKA,EAAL,OAAgBpC,EAAhB,EAAQqC,GAAkBD,EEatCS,CAAMD,EAAG5C,EAAG,CAAEoC,IAAGC,MAExB,IAhBsB,EAiBFS,mBADT,KAhBW,mBAiBdhD,EAjBc,KAiBXiD,EAjBW,OAkBFD,mBAASX,EAFlB,IAE4B,CAAEC,IAAGC,MAAKN,GAlB3B,mBAkBd/B,EAlBc,KAkBXgD,EAlBW,KA2BtB,OAAO,kBAAC,IAAMP,SAAP,KACL,2BAAOtD,MAAO,CAACI,MAAM,GAAD,OAAKqD,EAAG9C,EAAI6C,EAAG7C,EAAf,OAAuBmD,KAAK,QAAQC,IAAKP,EAAG7C,EAAGqD,IAAKP,EAAG9C,EAAGsD,SAAU,SAAC9D,GAAD,OARzE,SAACA,EAAG+D,GACnB,IAAMC,EAAIC,OAAOjE,EAAEkE,OAAOC,OAC1BV,EAAKO,GACL,IAAMtD,EAAImC,EAAMmB,EAAG,CAAClB,IAAGC,MACvBW,EAAKhD,EAAI+B,GAIsFqB,CAAS9D,IAAUmE,MAAO3D,IACzH,kCAAQA,EAAR,KAAaE,EAAb,KAEA,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAKI,EA/BC,GA+BK2B,EAAGA,EAAGJ,OAAQA,IACzB,kBAAC,EAAD,CAAKvB,EAhCC,GAgCK2B,EAAGA,EAAGJ,OAAQ,CAAC7B,IAAGE,OAE7B,kBAAC,EAAD,CAAMN,GAAIkD,EAAIjD,GAAIgD,IAClB,kBAAC,EAAD,CAASlC,GAAI,IAAIH,EAAM,GAAG,IAAKI,GAAI,IAAIJ,EAAM,IAAI,SCvC1CoD,EAAQ,SAAAC,GAAC,OAAIA,EAAE7D,EAAI,IAAM6D,EAAE3D,GA0DlC4D,EAAO,SAAA3E,GAAU,IACb4E,EAA2D5E,EAA3D4E,MAAOC,EAAoD7E,EAApD6E,IADK,EAC+C7E,EAA/C8E,sBADA,MACiB,GADjB,IAC+C9E,EAA1B+E,sBADrB,SAIdC,EADI/D,KAAKgE,IAAIL,EAAM/D,EAAIgE,EAAIhE,GACbiE,EAEdI,EA9DkB,SAACN,EAAOC,GAEhC,OAAID,EAAM/D,EAAIgE,EAAIhE,GAAK+D,EAAM7D,EAAI8D,EAAI9D,GAC3B,EAIN6D,EAAM/D,EAAIgE,EAAIhE,GAAK+D,EAAM7D,EAAI8D,EAAI9D,EAC5B,EAGF,EAmDSoE,CAAWP,EAAOC,GAC5BO,EAnCkB,SAACR,EAAOC,GAEhC,OAAID,EAAM/D,EAAIgE,EAAIhE,GAAK+D,EAAM7D,EAAI8D,EAAI9D,EAC5B,EAIL6D,EAAM/D,EAAIgE,EAAIhE,GAAK+D,EAAM7D,EAAI8D,EAAI9D,GAC3B,EAGH,EAwBSsE,CAAWT,EAAOC,GAC5BS,EAtBkB,SAACV,EAAOC,GAEhC,OAAID,EAAM/D,EAAIgE,EAAIhE,GAAK+D,EAAM7D,EAAI8D,EAAI9D,GAC3B,EAIN6D,EAAM/D,EAAIgE,EAAIhE,GAAK+D,EAAM7D,EAAI8D,EAAI9D,EAC5B,EAGF,EAWSwE,CAAWX,EAAOC,GAC5BW,EAnDkB,SAACZ,EAAOC,GAEhC,OAAID,EAAM/D,EAAIgE,EAAIhE,GAAK+D,EAAM7D,EAAI8D,EAAI9D,GAC3B,EAIN6D,EAAM/D,EAAIgE,EAAIhE,GAAK+D,EAAM7D,EAAI8D,EAAI9D,EAC5B,EAGF,EAwCS0E,CAAWb,EAAOC,GAE5BrD,EAAK,CAACX,EAAG+D,EAAM/D,EAAIqE,EAAQF,EAAWjE,EAAG6D,EAAM7D,EAAIqE,EAAQJ,GAC3DvD,EAAK,CAACZ,EAAGgE,EAAIhE,EAAIyE,EAAQN,EAAYjE,EAAG8D,EAAI9D,EAAIyE,EAAQR,GAExDU,EAAUX,EAAiB,kBAAC,IAAMvB,SAAP,KAC/B,kBAAC,EAAD,CAAQrC,EAAG,EAAGuB,OAAQkC,EAAOrC,OAAO,SACpC,kBAAC,EAAD,CAAQpB,EAAG,EAAGuB,OAAQmC,EAAKtC,OAAO,QAClC,kBAAC,EAAD,CAAQpB,EAAG,EAAGuB,OAAQlB,IACtB,kBAAC,EAAD,CAAQL,EAAG,EAAGuB,OAAQjB,KACJ,KAEpB,OAAO,kBAAC,IAAM+B,SAAP,KACJkC,EACD,0BAAMC,EAAC,YAAOlB,EAAMG,GAAb,cAAyBH,EAAMjD,GAA/B,aAAuCiD,EAAMhD,GAA7C,aAAqDgD,EAAMI,IAAQtC,OAAO,QAAQD,KAAK,kBAMrFsD,EAAc,SAAA5F,GAAU,IAC3B4E,EAAkF5E,EAAlF4E,MAAOC,EAA2E7E,EAA3E6E,IADmB,EACwD7E,EAAtE8E,sBADc,MACG,GADH,IACwD9E,EAAjD6F,sBADP,WACwD7F,EAA1B+E,sBAD9B,SAG5BjC,EAAI7B,KAAKgE,IAAIL,EAAM/D,EAAIgE,EAAIhE,GAE3B6B,EAAS,CAAC7B,EAAGI,KAAKgD,IAAIW,EAAM/D,EAAGgE,EAAIhE,GAAIE,EAAGE,KAAKgD,IAAIW,EAAM7D,EAAG8D,EAAI9D,IAEhE+E,EAASD,EAAiB,kBAAC,EAAD,CAAQ/C,EAAGA,EAAGJ,OAAQA,IAAY,KAElE,OAAO,kBAAC,IAAMc,SAAP,KACJsC,EACD,kBAAC,EAAD,CAAMlB,MAAOA,EAAOC,IAAKA,EAAKC,eAAgBA,EAAgBC,eAAgBA,MCjG5EgB,GAAe,EAAI9E,KAAKG,KAAK,IAAI,EAEjC4E,EAAe,SAACC,GAAmB,IAAhBC,EAAe,uDAAN,EAChC,OAAGD,EAAI,IAAMC,EAAS,GAAKD,EAAI,KAAOC,EAAS,GAAK,EAC3C,GAGD,GAoCJC,EAAY,SAAAnG,GAAU,IAClBoG,EAA6DpG,EAA7DoG,MAAOtD,EAAsD9C,EAAtD8C,EAAGiC,EAAmD/E,EAAnD+E,eAAgBc,EAAmC7F,EAAnC6F,eAAgBf,EAAmB9E,EAAnB8E,eAClD,OAAO,kBAAC,EAAD,KAnCiB,SAACsB,GAEzB,IAAIC,EAAO,EACPC,EAAM,EACNC,EAAM,EACNC,EAAM,EAEJC,EAAO,CAACJ,MAAKC,MAAKC,MAAKC,OAGzBE,EAAK,EACLC,EAAK,EACHxF,EAAIyF,MAAMR,GAAO9D,KAAK,GAAGuE,KAAI,SAACC,EAAGC,GAErC,IAAMd,EAAIc,EAAI,EAERC,EAAW,IAAPL,EAAW,EAAID,EAAKC,EAW9B,OARAN,GAAQW,EAAEhB,EAAaC,EAAG,GAC1BK,GAAOU,EAAEhB,EAAaC,GACtBM,IAAQS,EAAEL,GAAIX,EAAaC,GAC3BO,IAAQQ,EAAEL,GAAIX,EAAaC,EAAG,GAE9BS,EAAKC,EACLA,EAAKK,EAEE,CAACX,MAAKC,MAAKC,MAAKC,UAGzB,MAAO,CAACC,GAAMQ,OAAO9F,GAMlB+F,CAAkBd,GAAOS,KAAI,SAACC,EAAGC,GAAJ,OAAU,kBAAC,EAAD,CAAaI,IAAKJ,EAAGnC,MAAO,CAAC/D,EAAG,IAAMiG,EAAET,IAAIvD,EAAG/B,EAAG,IAAM+F,EAAER,IAAIxD,GAAI+B,IAAK,CAAChE,EAAE,IAAMiG,EAAEP,IAAIzD,EAAG/B,EAAG,IAAM+F,EAAEN,IAAI1D,GAAI+C,eAAgBA,EAAgBd,eAAgBA,EAAgBD,eAAgBA,SAIzN,WAAA9E,GAAU,IAAD,EACwB6D,mBAASkC,EAAc,GAD/C,mBACdjB,EADc,KACEsC,EADF,OAEwBvD,oBAAS,GAFjC,mBAEdgC,EAFc,KAEEwB,EAFF,OAGwBxD,oBAAS,GAHjC,mBAGdkB,EAHc,KAGEuC,EAHF,OAIMzD,mBAAS,IAJf,mBAIduC,EAJc,KAIPmB,EAJO,OAKF1D,mBAAS,IALP,mBAKdf,EALc,KAKX0E,EALW,OAMkB3D,oBAAS,GAN3B,mBAMd4D,EANc,KAMDC,EANC,KAWtBC,qBAAU,WACTC,SAASC,MAAQ,cACf,IAmBH,OAbsB,IAAhBJ,IAZO,GAaE3E,EACTgF,YAAW,WACTN,EAAK1E,EANE,MACF,KAQP4E,GAAe,IAOd,kBAAC,IAAMlE,SAAP,KACL,4BACE,gDAAqB,2BAAOQ,KAAK,QAAQC,IAAK,EAAGC,IAAK,IAAKC,SAAU,SAAA9D,GAAC,OAAI+G,EAAkB9C,OAAOjE,EAAEkE,OAAOC,OAAO,QAAnH,IAA2H,8BAAOM,EAAP,SAC3H,+CAAoB,2BAAOd,KAAK,WAAW+D,QAASlC,EAAgB1B,SAAU,kBAAMkD,GAAmBxB,OACvG,gDAAqB,2BAAO7B,KAAK,WAAW+D,QAAShD,EAAgBZ,SAAU,kBAAMmD,GAAmBvC,OACxG,6CAAkB,2BAAOf,KAAK,SAASQ,MAAO4B,EAAOjC,SAAU,SAAC9D,GAAD,OAAOkH,EAASjD,OAAOjE,EAAEkE,OAAOC,YAC/F,kCAAO,2BAAOR,KAAK,QAAQC,IAAM+D,EAAa9D,IAAK+D,IAAYzD,MAAS,IAAF1B,EAAOqB,SAAU,SAAC9D,GAAD,OAAOmH,EAAKlD,OAAOjE,EAAEkE,OAAOC,MAAM,UACzH,4BAAI,4BAAQ0D,QAAS,WAAOV,EA/BnB,KA+B8BE,GAAe,KAAlD,sBAGN,kBAAC,EAAD,CAAWtB,MAAOA,EAAOP,eAAgBA,EAAgBd,eAAgBA,EAAgBD,eAAgBA,EAAgBhC,EAAGA,MCtF1HqF,EAAW,kBAAM,8CACjBC,EAAS,kBACb,4BACE,4BAAI,kBAAC,IAAD,CAAMC,GAAG,QAAT,QACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,cAAT,gBAeOC,mBAXf,SAAgBtI,GACd,OACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuI,KAAK,OAAOC,UAAWlF,EAAKtD,MAAOA,IAC1C,kBAAC,IAAD,CAAOuI,KAAK,aAAaC,UAAWC,EAAWzI,MAAOA,IACtD,kBAAC,IAAD,CAAOuI,KAAK,IAAIC,UAAWJ,EAAQpI,MAAOA,IAC1C,kBAAC,IAAD,CAAOuI,KAAK,IAAIC,UAAWL,QCbfO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVN,IAAMC,EAAUC,IAA6B,CAC3CC,SAAUC,SAGZC,IAASC,OACP,kBAAC,IAAD,CAAQL,QAASA,GACf,kBAAC,EAAD,OAEFnB,SAASyB,eAAe,SDiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ef3bcdc0.chunk.js","sourcesContent":["import React from 'react';\n\nexport default props => {\n  const { children } = props;\n\n  const onMouseMove = e => {\n    //const x = e.screenX - 7;\n    //const y = e.screenY - 86;\n\n    //const c = { x, y };\n    //console.log(c)\n  }\n\n  return <svg style={{border: '1px solid black'}} onMouseMove={onMouseMove} width=\"100%\" height=\"800px\">{children}</svg>;\n}\n","class Segment {\n  constructor(p1, p2) {\n    this.p1 = p1;\n    this.p2 = p2;\n\n    this.d1 = p1.x - p1.x;\n    this.d2 = p2.y - p2.y;\n\n    this.alpha = Math.atan2(this.d1, this.d2);\n    this.r = Math.sqrt(this.d1**2 + this.d2**2);\n  }\n}\n\nexport default Segment;","export default class Point {\n  constructor (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  toLin() {\n    return [this.x, this.y].join(',');\n  }\n}\n\n","import React from 'react';\n\nimport Segment from './segment';\n\nconst Rhombus = props => {\n  const { c1, c2 } = props;\n\n  const S = new Segment(c1, c2)\n\n  const x3 = S.p1.x - S.r*Math.cos(S.alpha);\n  const y3 = S.p1.y + S.r*Math.sin(S.alpha);\n  const x4 = S.p2.x - S.r*Math.cos(S.alpha);\n  const y4 = S.p2.y + S.r*Math.sin(S.alpha);\n\n  const points = [\n    [S.x1, S.y1].join(','),\n    [S.x2, S.y2].join(','),\n    [x4, y4].join(','),\n    [x3, y3].join(','),\n  ].join(' ');\n\n  return <polygon points={points} style={{fill:'none', stroke:'purple', strokeWidth:1}} />\n}\n\nexport default Rhombus;","import React from 'react';\n\nimport Layout from './layout';\nimport Segment from './segment';\nimport Point from './point';\nimport Rhombus from './rhombus';\n\nexport const Circle = props => {\n  const { r = 10, coords: {x, y} = {x: 0, y: 0}, stroke='green' } = props;\n\n  return <circle r={r} cx={x} cy={y} stroke={stroke} strokeWidth=\"1\" fill=\"none\"/>\n}\n\nexport const Rect = props => {\n  const { w, h, coords: {x, y} = {x: 0, y: 0}} = props;\n  return <rect width={w} height={h} x={x} y={y} style={{fill: 'none', strokeWidth:1, stroke: 'rgb(0,0,0)'}} />\n}\n\nexport const Square = props => {\n  const { w, coords} = props;\n\n  return <Rect w={w} h={w} coords={coords}/>\n}\n\nexport const Line = props => {\n  const { p1, p2 } = props;\n  return <line x1={p1.x} y1={p1.y} x2={p2.x}  y2={p2.y} stroke=\"orange\" strokeWidth=\"1\"/>;\n}\n\nexport { Layout, Segment, Point, Rhombus };","export const equationFromSegment = (p1, p2) => {\n  const m = (p2.y - p1.y)/(p2.x - p1.x);\n  const q = p1.y - m * p1.x;\n\n  return { m, q };\n}\n\nexport const polyY = (x, {m, q}) => m*x + q;\nexport const polyX = (y, {m, q}) => (y - q ) / m;\n","import React from 'react';\n\nimport { Circle, Square } from '../svg';\n\nconst getSquareCenter = (w, coords) => {\n  const x = coords.x + w/2;\n  const y = coords.y + w/2;\n  return {x, y};\n}\n\nconst Eye = (props) => {\n  const { w, coords } = props;\n  const scoords = getSquareCenter(w, coords);\n\n  return <React.Fragment>\n    <Circle r={Math.sqrt(2)*w/2} coords={scoords}/>\n    <Circle r={w/2} coords={scoords}/>\n    <Circle r={Math.sqrt(2)*w} coords={coords}/>\n    <Circle r={Math.sqrt(2)*w} coords={getSquareCenter(w, scoords)}/>\n    <Square w={w} coords={coords}/>\n  </React.Fragment>\n}\n\nexport default Eye;","import React, { useState } from 'react';\n\nimport { Layout, Point, Line, Rhombus } from '../svg';\nimport { equationFromSegment, polyY, polyX } from '../math/polynom';\n\nimport Eye from './eye'\n\nexport default props => {\n  const r = 25;\n\n  const coords = {x: 400, y: 100};\n  const w = 53;\n  \n  const s1 = {x: coords.x + w, y: coords.y};\n  const s2 = {x: coords.x, y: coords.y + w};\n\n  const { m, q } = equationFromSegment(s1, s2);\n\n  const s3 = {x: 0}\n  s3.y = polyY(s3.x, { m, q });\n  const s4 = {y: 0}\n  s4.x = polyX(s4.y, { m, q });\n\n  const x0 = 244;\n  const [ x, setX ] = useState(x0);\n  const [ y, setY ] = useState(polyY(x0, { m, q })-w);\n\n  const onChange = (e, func) => {\n    const v = Number(e.target.value);\n    setX(v);\n    const y = polyY(v, {m, q});\n    setY(y - w);\n  }\n\n  return <React.Fragment>\n    <input style={{width: `${s4.x - s3.x}px`}} type=\"range\" min={s3.x} max={s4.x} onChange={(e) => onChange(e, setX)} value={x}/>\n    <code>({x}, {y})</code>\n    {/*<input type=\"range\" min={0} max={200} onChange={(e) => onChange(e, setY)} value={y} style={{marginTop: '50px', transform: 'rotate(270deg)'}}/>*/}\n    <Layout>\n      <Eye r={r} w={w} coords={coords}/>\n      <Eye r={r} w={w} coords={{x, y}}/>\n      {/*<Circle r={200} coords={{x: 319, y: 233}}/>*/}\n      <Line p1={s4} p2={s3}/>\n      <Rhombus c1={new Point(50,70)} c2={new Point(100,90)}/>\n    </Layout>\n  </React.Fragment>\n}\n","import React from 'react';\nimport { Square, Circle } from './index';\n//import { toStr, getSenseX1, getSenseX2, getSenseY1, getSenseY2, goldenRatio } from './utils';\n\nexport const toStr = s => s.x + ' ' + s.y;\n\nexport const getSenseX1 = (start, end) => {\n  // #2\n  if (start.x > end.x && start.y < end.y) {\n    return -1\n  }\n\n  // #4\n  if (start.x < end.x && start.y > end.y) {\n    return 1\n  }\n\n  return 0;\n}\n\nexport const getSenseY2 = (start, end) => {\n  // #2\n  if (start.x > end.x && start.y < end.y) {\n    return -1\n  }\n\n  // #4\n  if (start.x < end.x && start.y > end.y) {\n    return 1\n  }\n\n  return 0;\n}\n\nexport const getSenseX2 = (start, end) => {\n  // #1\n  if (start.x < end.x && start.y < end.y) {\n    return 1\n  }\n\n  // # 3\n  if (start.x > end.x && start.y > end.y) {\n    return -1\n  }\n\n  return 0;\n}\n\nexport const getSenseY1 = (start, end) => {\n  // #1\n  if (start.x < end.x && start.y < end.y) {\n    return -1\n  }\n\n  // # 3\n  if (start.x > end.x && start.y > end.y) {\n    return 1\n  }\n\n  return 0;\n}\n\nconst Path = props => {\n  const { start, end, curvatureRatio = .5, displayCircles = true } = props;\n\n  const r = Math.abs(start.x - end.x);\n  const curvature = r*curvatureRatio;\n\n  const senseX1 = getSenseX1(start, end);\n  const senseX2 = getSenseX2(start, end);\n  const senseY1 = getSenseY1(start, end);\n  const senseY2 = getSenseY2(start, end);\n\n  const c1 = {x: start.x + senseX1*curvature, y: start.y + senseX2*curvature};\n  const c2 = {x: end.x + senseY1*curvature , y: end.y + senseY2*curvature};\n\n  const circles = displayCircles ? <React.Fragment>\n    <Circle r={3} coords={start} stroke=\"blue\"/>\n    <Circle r={3} coords={end} stroke=\"red\"/>\n    <Circle r={3} coords={c1}/>\n    <Circle r={3} coords={c2}/>\n  </React.Fragment> : null;\n\n  return <React.Fragment>\n    {circles}\n    <path d={`M ${toStr(start)} C ${toStr(c1)}, ${toStr(c2)}, ${toStr(end)}`} stroke=\"black\" fill=\"transparent\"/>\n  </React.Fragment>;\n}\n\nexport default Path;\n\nexport const PathWSquare = props => {\n  const { start, end, curvatureRatio = .5, displaySquares = true, displayCircles = true } = props;\n\n  const w = Math.abs(start.x - end.x);\n\n  const coords = {x: Math.min(start.x, end.x), y: Math.min(start.y, end.y)};\n\n  const square = displaySquares ? <Square w={w} coords={coords}/> : null;\n\n  return <React.Fragment>\n    {square}\n    <Path start={start} end={end} curvatureRatio={curvatureRatio} displayCircles={displayCircles}/>\n  </React.Fragment>\n}","import React, { useState, useEffect } from 'react';\n\nimport { Layout } from '../svg';\nimport { PathWSquare } from '../svg/path';\n\nconst goldenRatio = (1 + Math.sqrt(5))/2;\n\nconst getDirection = (i, offset = 0) => {\n  if(i % 4 === offset % 4 || i % 4 === (offset + 1) % 4){\n    return 1;\n  }\n\n  return -1;\n}\n\nconst computeDirections = (nIter) => {\n  // init deltas\n  let dx1  = 0;\n  let dy1 = 0;\n  let dx2 = 1;\n  let dy2 = 1;\n\n  const init = {dx1, dy1, dx2, dy2}\n\n  // init fibonacci\n  let f1 = 0;\n  let f2 = 0;\n  const r = Array(nIter).fill(0).map((_, j) => {\n    // get the right offset\n    const i = j + 1;\n    // compute next fibonacci number\n    const t = f2 === 0 ? 1 : f1 + f2;\n    \n    // get the different directions \n    dx1  += t*getDirection(i, 1);\n    dy1 += t*getDirection(i);\n    dx2 += (t+f2)*getDirection(i);\n    dy2 += (t+f2)*getDirection(i, 3);\n\n    f1 = f2\n    f2 = t;\n\n    return {dx1, dy1, dx2, dy2};\n  });\n\n  return [init].concat(r);\n}\n\nconst FiboPaths = props => {\n  const { nIter, w, displayCircles, displaySquares, curvatureRatio } = props;\n  return <Layout>\n    {computeDirections(nIter).map((_, j) => <PathWSquare key={j} start={{x: 600 + _.dx1*w, y: 300 + _.dy1*w}} end={{x:600 + _.dx2*w, y: 300 + _.dy2*w}} displaySquares={displaySquares} displayCircles={displayCircles} curvatureRatio={curvatureRatio}/>)}\n  </Layout>\n}\n\nexport default props => {\n  const [ curvatureRatio, setCurvatureRatio ] = useState(goldenRatio - 1);\n  const [ displaySquares, setDisplaySquares ] = useState(true);\n  const [ displayCircles, setDisplayCircles ] = useState(true);\n  const [ nIter, setNIter ] = useState(21);\n  const [ w, setW ] = useState(.4);\n  const [ animationOn, setAnimationOn ] = useState(false);\n  const wMax = 10;\n  const wMin = .01;\n\n  // https://stackoverflow.com/questions/46160461/how-do-you-set-the-document-title-in-react\n  useEffect(() => {\n   document.title = 'Fibonacci';\n  }, []);\n\n  const keepAnimationRunning = () => {\n    const wInc = .1;\n    const dt = 100;\n\n    if (animationOn === true) {\n      if (wMax > w) {\n        setTimeout(() => {\n          setW(w + wInc);\n        }, dt);\n      } else {\n        setAnimationOn(false);\n      }\n    }\n  }\n\n  keepAnimationRunning()\n\n  return <React.Fragment>\n    <ul>\n      <li>Curvature ratio: <input type=\"range\" min={0} max={100} onChange={e => setCurvatureRatio(Number(e.target.value)/100)}/> <code>{curvatureRatio}/100</code></li>\n      <li>Display square: <input type=\"checkbox\" checked={displaySquares} onChange={() => setDisplaySquares(!displaySquares)}/></li>\n      <li>Display circles: <input type=\"checkbox\" checked={displayCircles} onChange={() => setDisplayCircles(!displayCircles)}/></li>\n      <li># iterations: <input type=\"number\" value={nIter} onChange={(e) => setNIter(Number(e.target.value))}/></li>\n      <li>w: <input type=\"range\" min={ wMin * 100 } max={wMax * 100} value={w*100} onChange={(e) => setW(Number(e.target.value/100))}/></li> \n      <li><button onClick={() => {setW(wMin);setAnimationOn(true)}}>Launch Animation</button></li>\n    </ul>\n\n    <FiboPaths nIter={nIter} displaySquares={displaySquares} displayCircles={displayCircles} curvatureRatio={curvatureRatio} w={w}/>\n  </React.Fragment>;\n} \n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  withRouter,\n  Link,\n} from 'react-router-dom';\n\nimport Eye from './eye';\nimport Fibonacci from './fibonacci';\n\nconst NotFound = () => <p>Page Not Found</p>;\nconst Public = () => (\n  <ul>\n    <li><Link to=\"/eye\">Eye</Link></li>\n    <li><Link to=\"/fibonacci\">Fibonacci</Link></li>\n  </ul>\n);\n\nfunction Router(props) {\n  return (\n      <Switch>\n        <Route path=\"/eye\" component={Eye} props={props} />\n        <Route path=\"/fibonacci\" component={Fibonacci} props={props} />\n        <Route path=\"/\" component={Public} props={props} />\n        <Route path=\"/\" component={NotFound} />\n      </Switch>\n  );\n}\n\nexport default withRouter(Router);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport * as History from 'history';\n\nimport AppRouter from './router';\nimport * as serviceWorker from './serviceWorker';\n\nconst history = History.createBrowserHistory({\n  basename: process.env.PUBLIC_URL || '',\n});\n\nReactDOM.render(\n  <Router history={history}>\n    <AppRouter />\n  </Router>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}